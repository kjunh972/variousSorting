{"ast":null,"code":"var _jsxFileName = \"/Users/kjunh972/project/jun/Spring/variousSorting/src/main/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // 상태 변수들을 선언합니다\n  const [algorithm, setAlgorithm] = useState(''); // 선택된 정렬 알고리즘\n  const [numbers, setNumbers] = useState([]); // 정렬할 숫자 배열\n  const [currentNumber, setCurrentNumber] = useState(''); // 현재 입력 중인 숫자\n  const [sortingSteps, setSortingSteps] = useState([]); // 정렬 과정의 각 단계\n  const [currentStep, setCurrentStep] = useState(0); // 현재 보여주고 있는 정렬 단계\n\n  // 알고리즘이 선택되면 초기 배열을 생성합니다\n  useEffect(() => {\n    if (algorithm) {\n      const initialArray = Array.from({\n        length: 10\n      }, () => Math.floor(Math.random() * 100));\n      setNumbers(initialArray);\n      setSortingSteps([initialArray]);\n    }\n  }, [algorithm]);\n\n  // 숫자를 배열에 추가하는 함수\n  const addNumber = () => {\n    if (currentNumber && !isNaN(currentNumber)) {\n      const newNumbers = [...numbers, parseInt(currentNumber)];\n      setNumbers(newNumbers);\n      setSortingSteps([newNumbers]);\n      setCurrentNumber(''); // 입력 필드 초기화\n      setCurrentStep(0);\n    }\n  };\n\n  // 배열에서 숫자를 제거하는 함수\n  const removeNumber = index => {\n    const newNumbers = numbers.filter((_, i) => i !== index);\n    setNumbers(newNumbers);\n    setSortingSteps([newNumbers]);\n    setCurrentStep(0);\n  };\n\n  // 정렬을 시작하는 함수\n  const startSorting = async () => {\n    try {\n      console.log('Sorting started:', algorithm, numbers);\n      const response = await axios.post(`/api/sorting/${algorithm}`, numbers);\n      console.log('Sorting response:', response.data);\n      setSortingSteps(response.data);\n      setCurrentStep(0);\n    } catch (error) {\n      console.error('Sorting error:', error);\n      if (error.response) {\n        // 서버 응답이 2xx 범위를 벗어난 상태 코드를 반환한 경우\n        console.error('Error data:', error.response.data);\n        console.error('Error status:', error.response.status);\n        console.error('Error headers:', error.response.headers);\n      } else if (error.request) {\n        // 요청이 이루어졌으나 응답을 받지 못한 경우\n        console.error('Error request:', error.request);\n      } else {\n        // 요청을 설정하는 중에 오류가 발생한 경우\n        console.error('Error message:', error.message);\n      }\n      alert('정렬 중 오류가 발생했습니다: ' + error.message);\n    }\n  };\n\n  // 다음 정렬 단계로 이동하는 함수\n  const nextStep = () => {\n    if (currentStep < sortingSteps.length - 1) {\n      setCurrentStep(currentStep + 1);\n    }\n  };\n\n  // 이전 정렬 단계로 이동하는 함수\n  const prevStep = () => {\n    if (currentStep > 0) {\n      setCurrentStep(currentStep - 1);\n    }\n  };\n\n  // 알고리즘에 따른 시각화 컴포넌트\n  const VisualizationComponent = () => {\n    if (!algorithm) return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"visualization\",\n      children: sortingSteps[currentStep] && sortingSteps[currentStep].map((num, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bar\",\n        style: {\n          height: `${num * 3}px`\n        },\n        onClick: () => removeNumber(index),\n        children: num\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uC815\\uB82C \\uC54C\\uACE0\\uB9AC\\uC998 \\uC2DC\\uAC01\\uD654\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), algorithm && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: algorithm === 'selection' ? '선택 정렬' : '삽입 정렬'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(VisualizationComponent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: currentNumber,\n          onChange: e => setCurrentNumber(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addNumber,\n          children: \"\\uC22B\\uC790 \\uCD94\\uAC00\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startSorting,\n        children: \"\\uC815\\uB82C \\uC2DC\\uC791\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: prevStep,\n        disabled: currentStep === 0,\n        children: \"\\uC774\\uC804 \\uB2E8\\uACC4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: nextStep,\n        disabled: currentStep === sortingSteps.length - 1,\n        children: \"\\uB2E4\\uC74C \\uB2E8\\uACC4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"\\uD604\\uC7AC \\uB2E8\\uACC4: \", currentStep + 1, \" / \", sortingSteps.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"oEuBkg6erXcRI7ZBRWrIJ1AO8QE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","App","_s","algorithm","setAlgorithm","numbers","setNumbers","currentNumber","setCurrentNumber","sortingSteps","setSortingSteps","currentStep","setCurrentStep","initialArray","Array","from","length","Math","floor","random","addNumber","isNaN","newNumbers","parseInt","removeNumber","index","filter","_","i","startSorting","console","log","response","post","data","error","status","headers","request","message","alert","nextStep","prevStep","VisualizationComponent","className","children","map","num","style","height","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","disabled","_c","$RefreshReg$"],"sources":["/Users/kjunh972/project/jun/Spring/variousSorting/src/main/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\nfunction App() {\n  // 상태 변수들을 선언합니다\n  const [algorithm, setAlgorithm] = useState(''); // 선택된 정렬 알고리즘\n  const [numbers, setNumbers] = useState([]); // 정렬할 숫자 배열\n  const [currentNumber, setCurrentNumber] = useState(''); // 현재 입력 중인 숫자\n  const [sortingSteps, setSortingSteps] = useState([]); // 정렬 과정의 각 단계\n  const [currentStep, setCurrentStep] = useState(0); // 현재 보여주고 있는 정렬 단계\n\n  // 알고리즘이 선택되면 초기 배열을 생성합니다\n  useEffect(() => {\n    if (algorithm) {\n      const initialArray = Array.from({length: 10}, () => Math.floor(Math.random() * 100));\n      setNumbers(initialArray);\n      setSortingSteps([initialArray]);\n    }\n  }, [algorithm]);\n\n  // 숫자를 배열에 추가하는 함수\n  const addNumber = () => {\n    if (currentNumber && !isNaN(currentNumber)) {\n      const newNumbers = [...numbers, parseInt(currentNumber)];\n      setNumbers(newNumbers);\n      setSortingSteps([newNumbers]);\n      setCurrentNumber(''); // 입력 필드 초기화\n      setCurrentStep(0);\n    }\n  };\n\n  // 배열에서 숫자를 제거하는 함수\n  const removeNumber = (index) => {\n    const newNumbers = numbers.filter((_, i) => i !== index);\n    setNumbers(newNumbers);\n    setSortingSteps([newNumbers]);\n    setCurrentStep(0);\n  };\n\n  // 정렬을 시작하는 함수\n    const startSorting = async () => {\n      try {\n        console.log('Sorting started:', algorithm, numbers);\n        const response = await axios.post(`/api/sorting/${algorithm}`, numbers);\n        console.log('Sorting response:', response.data);\n        setSortingSteps(response.data);\n        setCurrentStep(0);\n      } catch (error) {\n        console.error('Sorting error:', error);\n        if (error.response) {\n          // 서버 응답이 2xx 범위를 벗어난 상태 코드를 반환한 경우\n          console.error('Error data:', error.response.data);\n          console.error('Error status:', error.response.status);\n          console.error('Error headers:', error.response.headers);\n        } else if (error.request) {\n          // 요청이 이루어졌으나 응답을 받지 못한 경우\n          console.error('Error request:', error.request);\n        } else {\n          // 요청을 설정하는 중에 오류가 발생한 경우\n          console.error('Error message:', error.message);\n        }\n        alert('정렬 중 오류가 발생했습니다: ' + error.message);\n      }\n    };\n\n  // 다음 정렬 단계로 이동하는 함수\n  const nextStep = () => {\n    if (currentStep < sortingSteps.length - 1) {\n      setCurrentStep(currentStep + 1);\n    }\n  };\n\n  // 이전 정렬 단계로 이동하는 함수\n  const prevStep = () => {\n    if (currentStep > 0) {\n      setCurrentStep(currentStep - 1);\n    }\n  };\n\n  // 알고리즘에 따른 시각화 컴포넌트\n  const VisualizationComponent = () => {\n    if (!algorithm) return null;\n\n    return (\n      <div className=\"visualization\">\n        {sortingSteps[currentStep] && sortingSteps[currentStep].map((num, index) => (\n          <div\n            key={index}\n            className=\"bar\"\n            style={{height: `${num * 3}px`}}\n            onClick={() => removeNumber(index)}\n          >\n            {num}\n          </div>\n        ))}\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>정렬 알고리즘 시각화</h1>\n      {algorithm && (\n              <div>\n                <h2>{algorithm === 'selection' ? '선택 정렬' : '삽입 정렬'}</h2>\n                <VisualizationComponent />\n                <div>\n                  <input\n                    type=\"number\"\n                    value={currentNumber}\n                    onChange={(e) => setCurrentNumber(e.target.value)}\n                  />\n                  <button onClick={addNumber}>숫자 추가</button>\n                </div>\n                <button onClick={startSorting}>정렬 시작</button>\n                <button onClick={prevStep} disabled={currentStep === 0}>이전 단계</button>\n                <button onClick={nextStep} disabled={currentStep === sortingSteps.length - 1}>다음 단계</button>\n                <div>현재 단계: {currentStep + 1} / {sortingSteps.length}</div>\n              </div>\n            )}\n          </div>\n        );\n      }\n\n      export default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}