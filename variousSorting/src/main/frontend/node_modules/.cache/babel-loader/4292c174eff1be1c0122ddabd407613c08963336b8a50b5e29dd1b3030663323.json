{"ast":null,"code":"var _jsxFileName = \"/Users/kjunh972/project/jun/Spring/variousSorting/variousSorting/src/main/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport AlgorithmSelector from './AlgorithmSelector';\nimport SortingVisualizer from './SortingVisualizer';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [selectedAlgorithm, setSelectedAlgorithm] = useState('');\n  const [showPopup, setShowPopup] = useState(true);\n  const [sortingSteps, setSortingSteps] = useState([]);\n  const [currentStep, setCurrentStep] = useState(0);\n  useEffect(() => {\n    if (selectedAlgorithm) {\n      // 여기서 선택된 알고리즘에 따라 정렬 단계를 생성하고 설정합니다.\n      const steps = generateSortingSteps(selectedAlgorithm);\n      setSortingSteps(steps);\n      setCurrentStep(0);\n    }\n  }, [selectedAlgorithm]);\n  const generateSortingSteps = algorithm => {\n    // 이 함수는 선택된 알고리즘에 따라 정렬 단계를 생성합니다.\n    // 실제 구현에서는 각 알고리즘별로 상세한 단계를 생성해야 합니다.\n    return []; // 임시 반환값\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [showPopup && /*#__PURE__*/_jsxDEV(AlgorithmSelector, {\n      onSelect: algorithm => {\n        setSelectedAlgorithm(algorithm);\n        setShowPopup(false);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), selectedAlgorithm && /*#__PURE__*/_jsxDEV(SortingVisualizer, {\n      algorithm: selectedAlgorithm,\n      steps: sortingSteps,\n      currentStep: currentStep,\n      setCurrentStep: setCurrentStep\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"jDHgNXugfdXMGpObf4ODZTdx0PA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","AlgorithmSelector","SortingVisualizer","jsxDEV","_jsxDEV","App","_s","selectedAlgorithm","setSelectedAlgorithm","showPopup","setShowPopup","sortingSteps","setSortingSteps","currentStep","setCurrentStep","steps","generateSortingSteps","algorithm","className","children","onSelect","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/kjunh972/project/jun/Spring/variousSorting/variousSorting/src/main/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport AlgorithmSelector from './AlgorithmSelector';\nimport SortingVisualizer from './SortingVisualizer';\nimport './App.css';\n\nconst App = () => {\n  const [selectedAlgorithm, setSelectedAlgorithm] = useState('');\n  const [showPopup, setShowPopup] = useState(true);\n  const [sortingSteps, setSortingSteps] = useState([]);\n  const [currentStep, setCurrentStep] = useState(0);\n\n  useEffect(() => {\n    if (selectedAlgorithm) {\n      // 여기서 선택된 알고리즘에 따라 정렬 단계를 생성하고 설정합니다.\n      const steps = generateSortingSteps(selectedAlgorithm);\n      setSortingSteps(steps);\n      setCurrentStep(0);\n    }\n  }, [selectedAlgorithm]);\n\n  const generateSortingSteps = (algorithm) => {\n    // 이 함수는 선택된 알고리즘에 따라 정렬 단계를 생성합니다.\n    // 실제 구현에서는 각 알고리즘별로 상세한 단계를 생성해야 합니다.\n    return []; // 임시 반환값\n  };\n\n  return (\n    <div className=\"app\">\n      {showPopup && (\n        <AlgorithmSelector\n          onSelect={(algorithm) => {\n            setSelectedAlgorithm(algorithm);\n            setShowPopup(false);\n          }}\n        />\n      )}\n      {selectedAlgorithm && (\n        <SortingVisualizer\n          algorithm={selectedAlgorithm}\n          steps={sortingSteps}\n          currentStep={currentStep}\n          setCurrentStep={setCurrentStep}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,iBAAiB,MAAM,qBAAqB;AACnD,OAAOC,iBAAiB,MAAM,qBAAqB;AACnD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC9D,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACY,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACc,WAAW,EAAEC,cAAc,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC;EAEjDC,SAAS,CAAC,MAAM;IACd,IAAIO,iBAAiB,EAAE;MACrB;MACA,MAAMQ,KAAK,GAAGC,oBAAoB,CAACT,iBAAiB,CAAC;MACrDK,eAAe,CAACG,KAAK,CAAC;MACtBD,cAAc,CAAC,CAAC,CAAC;IACnB;EACF,CAAC,EAAE,CAACP,iBAAiB,CAAC,CAAC;EAEvB,MAAMS,oBAAoB,GAAIC,SAAS,IAAK;IAC1C;IACA;IACA,OAAO,EAAE,CAAC,CAAC;EACb,CAAC;EAED,oBACEb,OAAA;IAAKc,SAAS,EAAC,KAAK;IAAAC,QAAA,GACjBV,SAAS,iBACRL,OAAA,CAACH,iBAAiB;MAChBmB,QAAQ,EAAGH,SAAS,IAAK;QACvBT,oBAAoB,CAACS,SAAS,CAAC;QAC/BP,YAAY,CAAC,KAAK,CAAC;MACrB;IAAE;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACF,EACAjB,iBAAiB,iBAChBH,OAAA,CAACF,iBAAiB;MAChBe,SAAS,EAAEV,iBAAkB;MAC7BQ,KAAK,EAAEJ,YAAa;MACpBE,WAAW,EAAEA,WAAY;MACzBC,cAAc,EAAEA;IAAe;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAClB,EAAA,CAzCID,GAAG;AAAAoB,EAAA,GAAHpB,GAAG;AA2CT,eAAeA,GAAG;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}